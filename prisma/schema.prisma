// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id                         Int     @id @default(1)
  logoUrl                    String? @db.Text
  companyName                String?
  whatsappSales              String?
  footerText                 String? @db.Text
  address                    String?
  contactEmail               String?
  contactPhone               String?
  openingHours               String?
  socialMedia                Json?
  menuItems                  Json?
  heroHeadline               String?
  heroDescription            String? @db.Text
  heroImageUrl               String? @db.Text
  heroButton1Text            String?
  heroButton1Link            String?
  heroButton2Text            String?
  heroButton2Link            String?
  featureCards               Json?
  aboutUsSubtitle            String?
  aboutUsTitle               String?
  aboutUsDescription         String? @db.Text
  aboutUsImageUrl            String? @db.Text
  aboutUsChecklist           Json?
  servicesSubtitle           String?
  servicesTitle              String?
  servicesDescription        String? @db.Text
  ctaHeadline                String?
  ctaDescription             String?
  ctaImageUrl                String? @db.Text
  ctaButtonText              String?
  ctaButtonLink              String?
  trustedByText              String?
  trustedByLogos             Json?
  servicesPageTitle          String?
  servicesPageSubtitle       String?
  servicesPageCommitmentTitle String?
  servicesPageCommitmentText String? @db.Text
  servicesPageHeaderImageUrl String? @db.Text
  solutionsPageTitle         String?
  solutionsPageSubtitle      String?
  aboutPageTitle             String?
  aboutPageSubtitle          String?
  missionTitle               String?
  missionText                String?
  visionTitle                String?
  visionText                 String?
  resourcesPageTitle         String?
  resourcesPageSubtitle      String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
}

model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  slug          String               @unique
  description   String?              @db.Text
  imageUrl      String?              @db.Text
  subCategories ProductSubCategory[]
}

model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  products   Product[]
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
}

model Product {
  id                      Int                 @id @default(autoincrement())
  title                   String
  slug                    String              @unique
  description             String              @db.Text
  longDescription         String?             @db.Text
  images                  Json?
  features                Json?
  technicalSpecifications Json?
  generalSpecifications   Json?
  metaTitle               String?
  metaDescription         String?             @db.Text
  tokopediaUrl            String?
  shopeeUrl               String?
  subCategory             ProductSubCategory  @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  subCategoryId           Int
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
}

model ProfessionalService {
  id              Int      @id @default(autoincrement())
  icon            String
  title           String
  slug            String   @unique
  description     String   @db.Text
  longDescription String?  @db.Text
  imageUrl        String?  @db.Text
  details         Json?
  benefits        Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Solution {
  id          Int       @id @default(autoincrement())
  icon        String
  title       String
  slug        String    @unique
  description String    @db.Text
  image       String?   @db.Text
  aiHint      String?
  keyPoints   Json?
  parentId    Int?
  parent      Solution? @relation("SolutionHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  children    Solution[] @relation("SolutionHierarchy")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model PartnerLogo {
  id  Int    @id @default(autoincrement())
  src String @db.Text
  alt String
}

model CustomerLogo {
  id  Int    @id @default(autoincrement())
  src String @db.Text
  alt String
}

model NewsItem {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  category  String
  image     String?  @db.Text
  content   String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
