// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id                  Int      @id @default(1)
  logoUrl             String?
  companyName         String
  whatsappSales       String
  footerText          String
  socialMedia         Json
  menuItems           Json
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  heroHeadline        String?
  heroDescription     String?
  heroImageUrl        String?
  heroButton1Text     String?
  heroButton1Link     String?
  heroButton2Text     String?
  heroButton2Link     String?
  featureCards        Json
  aboutUsSubtitle     String?
  aboutUsTitle        String?
  aboutUsDescription  String?
  aboutUsImageUrl     String?
  aboutUsChecklist    Json
  servicesSubtitle    String?
  servicesTitle       String?
  servicesDescription String?
  professionalServices Json?
}

model Product {
  id               Int                 @id @default(autoincrement())
  title            String
  slug             String              @unique
  description      String
  longDescription  String?
  images           Json                @default("[]")
  features         Json                @default("[]")
  specifications   Json?
  metaTitle        String?
  metaDescription  String?
  tokopediaUrl     String?
  shopeeUrl        String?
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
  subCategory      ProductSubCategory  @relation(fields: [subCategoryId], references: [id])
  subCategoryId    Int
}

model ProductCategory {
  id             Int                  @id @default(autoincrement())
  name           String               @unique
  description    String?
  imageUrl       String?
  subCategories  ProductSubCategory[]
}

model ProductSubCategory {
  id          Int              @id @default(autoincrement())
  name        String
  products    Product[]
  category    ProductCategory  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int

  @@unique([name, categoryId])
}
