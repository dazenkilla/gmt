// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id                   Int     @id @default(1)
  logoUrl              String? @db.Text
  companyName          String
  whatsappSales        String
  footerText           String  @db.Text
  address              String?
  contactEmail         String?
  contactPhone         String?
  openingHours         String?
  socialMedia          Json?
  menuItems            Json?
  heroHeadline         String?
  heroDescription      String? @db.Text
  heroImageUrl         String? @db.Text
  heroButton1Text      String?
  heroButton1Link      String?
  heroButton2Text      String?
  heroButton2Link      String?
  featureCards         Json?
  aboutUsSubtitle      String?
  aboutUsTitle         String?
  aboutUsDescription   String? @db.Text
  aboutUsImageUrl      String? @db.Text
  aboutUsChecklist     Json?
  servicesSubtitle     String?
  servicesTitle        String?
  servicesDescription  String? @db.Text
  professionalServices Json?
  ctaHeadline          String?
  ctaDescription       String? @db.Text
  ctaImageUrl          String? @db.Text
  ctaButtonText        String?
  ctaButtonLink        String?
  trustedByText        String?
  trustedByLogos       Json?
  testimonials         Json?
  blogPosts            Json?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  description   String?              @db.Text
  imageUrl      String?              @db.Text
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  subCategories ProductSubCategory[]
}

model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  categoryId Int
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products   Product[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([name, categoryId])
}

model Product {
  id                Int                @id @default(autoincrement())
  title             String
  slug              String             @unique
  description       String             @db.Text
  longDescription   String?            @db.Text
  images            Json?
  features          Json?
  specifications    Json?
  metaTitle         String?
  metaDescription   String?            @db.Text
  tokopediaUrl      String?
  shopeeUrl         String?
  subCategoryId     Int
  subCategory       ProductSubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Restrict)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}
