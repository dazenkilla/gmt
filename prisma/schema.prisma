// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id            Int      @id @default(1)
  logoUrl       String?
  companyName   String
  whatsappSales String
  footerText    String
  socialMedia   Json
  menuItems     Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Model for Product Categories
model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  subCategories ProductSubCategory[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

// Model for Product Sub-Categories
model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  products   Product[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([name, categoryId])
}

// Model for Products
model Product {
  id              Int                 @id @default(autoincrement())
  title           String              @unique
  slug            String              @unique
  description     String
  longDescription String?             @db.Text
  image           String?
  features        Json?
  specifications  Json?
  metaTitle       String?
  metaDescription String?
  subCategory     ProductSubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId   Int?
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
}