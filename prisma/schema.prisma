// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id            Int     @id @default(1)
  logoUrl       String? @db.Text
  companyName   String
  whatsappSales String
  footerText    String  @db.Text
  socialMedia   Json
  menuItems     Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ProductCategory {
  id            Int                 @id @default(autoincrement())
  name          String              @unique
  description   String?             @db.Text
  imageUrl      String?             @db.Text
  subCategories ProductSubCategory[]
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}

model ProductSubCategory {
  id         Int              @id @default(autoincrement())
  name       String
  category   ProductCategory  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  products   Product[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  @@unique([name, categoryId])
}

model Product {
  id               Int                @id @default(autoincrement())
  title            String
  slug             String             @unique
  description      String             @db.Text
  longDescription  String?            @db.Text
  images           Json               @default("[]")
  features         Json               @default("[]")
  specifications   Json?
  subCategory      ProductSubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId    Int
  metaTitle        String?
  metaDescription  String?            @db.Text
  tokopediaUrl     String?
  shopeeUrl        String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}
