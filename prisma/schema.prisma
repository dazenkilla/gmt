// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WebSettings {
  id            Int      @id @default(1)
  logoUrl       String?
  companyName   String
  whatsappSales String
  footerText    String
  socialMedia   String // JSON stored as string
  menuItems     String // JSON stored as string
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product {
  id              Int      @id @default(autoincrement())
  title           String   @unique
  slug            String   @unique
  description     String   @db.Text
  longDescription String?  @db.Text
  image           String?
  features        String?  // JSON stored as string
  specifications  String?  // JSON stored as string
  metaTitle       String?
  metaDescription String?  @db.Text

  subCategoryId Int
  subCategory   ProductSubCategory @relation(fields: [subCategoryId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductCategory {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  subCategories ProductSubCategory[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ProductSubCategory {
  id         Int      @id @default(autoincrement())
  name       String
  
  categoryId Int
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  products   Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, categoryId])
}
