
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  description   String?              @db.Text
  imageUrl      String?
  subCategories ProductSubCategory[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  categoryId Int
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products   Product[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([name, categoryId])
  @@index([categoryId])
}

model Product {
  id               Int                @id @default(autoincrement())
  title            String
  slug             String             @unique
  description      String             @db.Text
  longDescription  String?            @db.Text
  images           Json               @default("[]")
  features         Json               @default("[]")
  specifications   Json               @default("{}")
  metaTitle        String?
  metaDescription  String?
  tokopediaUrl     String?
  shopeeUrl        String?
  subCategoryId    Int
  subCategory      ProductSubCategory @relation(fields: [subCategoryId], references: [id])
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt

  @@index([subCategoryId])
}

// New model for Professional Services
model ProfessionalService {
  id          Int      @id @default(autoincrement())
  icon        String
  title       String
  description String   @db.Text
  details     Json // Storing details as a JSON array of strings
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// New model for Solutions
model Solution {
  id          Int      @id @default(autoincrement())
  icon        String
  title       String
  description String   @db.Text
  image       String?
  aiHint      String?
  keyPoints   Json // Storing key points as a JSON array of strings
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// New model for Timeline Events
model TimelineEvent {
  id    Int    @id @default(autoincrement())
  year  String
  event String
}

// New model for Team Members
model TeamMember {
  id       Int     @id @default(autoincrement())
  name     String
  role     String
  image    String?
  linkedin String?
  aiHint   String?
}

// New model for News Items
model NewsItem {
  id       Int     @id @default(autoincrement())
  title    String
  date     String?
  category String?
  image    String?
  aiHint   String?
}


model WebSettings {
  id                Int      @id @default(1)
  logoUrl           String?
  companyName       String   @default("Global Multi Technology")
  whatsappSales     String   @default("+6281234567890")
  footerText        String   @db.Text
  address           String
  contactEmail      String
  contactPhone      String
  openingHours      String
  socialMedia       Json     @default("{}")
  menuItems         Json     @default("[]")
  heroHeadline      String
  heroDescription   String   @db.Text
  heroImageUrl      String?
  heroButton1Text   String
  heroButton1Link   String
  heroButton2Text   String
  heroButton2Link   String
  featureCards      Json     @default("[]")
  aboutUsSubtitle   String
  aboutUsTitle      String
  aboutUsDescription String  @db.Text
  aboutUsImageUrl   String?
  aboutUsChecklist  Json     @default("[]")
  servicesSubtitle  String
  servicesTitle     String
  servicesDescription String @db.Text
  ctaHeadline       String
  ctaDescription    String   @db.Text
  ctaImageUrl       String?
  ctaButtonText     String
  ctaButtonLink     String
  trustedByText     String
  trustedByLogos    Json     @default("[]")
  testimonials      Json     @default("[]")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Page-specific headers
  servicesPageTitle           String @default("Layanan Profesional Kami")
  servicesPageSubtitle        String @default("Lebih dari sekadar penyedia produk, kami adalah mitra teknologi Anda.")
  servicesPageCommitmentTitle String @default("Komitmen Kami Pada Keamanan")
  servicesPageCommitmentText  String @db.Text
  servicesPageHeaderImageUrl  String @default("https://placehold.co/600x400.png")

  solutionsPageTitle          String @default("Solusi Teknologi Unggulan")
  solutionsPageSubtitle       String @default("Kami menyediakan solusi end-to-end yang dirancang untuk mengatasi tantangan spesifik industri.")

  aboutPageTitle              String @default("Tentang Kami")
  aboutPageSubtitle           String @default("Mendorong Inovasi, Memberdayakan Pertumbuhan.")
  missionTitle                String @default("Misi Kami")
  missionText                 String @db.Text
  visionTitle                 String @default("Visi Kami")
  visionText                  String @db.Text
  
  resourcesPageTitle          String @default("Wawasan & Berita")
  resourcesPageSubtitle       String @default("Dapatkan wawasan terbaru dari industri, berita perusahaan, dan artikel mendalam dari para ahli kami.")
}
