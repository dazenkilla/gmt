
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// General website settings
model WebSettings {
  id               Int     @id @default(1)
  logoUrl          String?
  companyName      String?
  whatsappSales    String?
  footerText       String?
  address          String?
  contactEmail     String?
  contactPhone     String?
  openingHours     String?
  socialMedia      Json?   @default("{}")
  menuItems        Json?   @default("[]")
  
  heroHeadline           String?
  heroDescription        String?
  heroImageUrl           String?
  heroButton1Text        String?
  heroButton1Link        String?
  heroButton2Text        String?
  heroButton2Link        String?

  featureCards      Json?   @default("[]")

  aboutUsSubtitle      String?
  aboutUsTitle         String?
  aboutUsDescription   String?
  aboutUsImageUrl      String?
  aboutUsChecklist     Json?   @default("[]")

  servicesSubtitle   String?
  servicesTitle      String?
  servicesDescription String?
  
  ctaHeadline      String?
  ctaDescription   String?
  ctaImageUrl      String?
  ctaButtonText    String?
  ctaButtonLink    String?

  trustedByText    String?
  trustedByLogos   Json?   @default("[]")
  testimonials     Json?   @default("[]")

  servicesPageTitle           String?
  servicesPageSubtitle        String?
  servicesPageCommitmentTitle String?
  servicesPageCommitmentText  String?
  servicesPageHeaderImageUrl  String?

  solutionsPageTitle   String?
  solutionsPageSubtitle  String?

  aboutPageTitle       String?
  aboutPageSubtitle    String?
  missionTitle         String?
  missionText          String?
  visionTitle          String?
  visionText           String?

  resourcesPageTitle   String?
  resourcesPageSubtitle String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model for Professional Services page content
model ProfessionalService {
  id          Int      @id @default(autoincrement())
  icon        String
  title       String
  description String
  details     Json     @default("[]")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model for Solutions page content
model Solution {
  id          Int      @id @default(autoincrement())
  icon        String
  title       String
  description String
  image       String?
  aiHint      String?
  keyPoints   Json     @default("[]")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model for Timeline events on About Us page
model TimelineEvent {
  id    Int    @id @default(autoincrement())
  year  String
  event String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model for Team Members on About Us page
model TeamMember {
  id       Int     @id @default(autoincrement())
  name     String
  role     String
  image    String?
  linkedin String?
  aiHint   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Model for News Items on Resources page
model NewsItem {
  id       Int     @id @default(autoincrement())
  title    String
  date     String
  category String
  image    String?
  aiHint   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


// --- PRODUCT CATALOG ---

// Product Category (e.g., Perangkat Keras, Perangkat Lunak)
model ProductCategory {
  id            Int                  @id @default(autoincrement())
  name          String               @unique
  description   String?              @db.Text
  imageUrl      String?
  subCategories ProductSubCategory[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

// Product Sub-Category (e.g., Kiosk, Sistem Antrian)
model ProductSubCategory {
  id         Int             @id @default(autoincrement())
  name       String
  category   ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  products   Product[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([name, categoryId])
}

// Individual Product
model Product {
  id               Int                 @id @default(autoincrement())
  title            String
  slug             String              @unique
  description      String              @db.Text
  longDescription  String?             @db.Text
  images           Json?               @default("[]") // Array of image URLs
  features         Json?               @default("[]") // Array of strings
  specifications   Json?               @default("{}") // Key-value pairs
  metaTitle        String?
  metaDescription  String?
  tokopediaUrl     String?
  shopeeUrl        String?
  subCategory      ProductSubCategory  @relation(fields: [subCategoryId], references: [id])
  subCategoryId    Int
  createdAt        DateTime            @default(now())
  updatedAt        DateTime            @updatedAt
}
